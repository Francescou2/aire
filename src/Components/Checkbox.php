<?php

namespace Galahad\Aire\Components;

use Galahad\Aire\Elements\Checkbox as CheckboxElement; 

class Checkbox extends ElementComponent
{
	public function __construct(
		$labelHtml = null,
		$name = null,
		?bool $defaultChecked = null,
		$type = null,
		$accept = null,
		$alt = null,
		$autoComplete = null,
		?bool $autoFocus = null,
		?bool $checked = null,
		$dirName = null,
		?bool $disabled = null,
		$form = null,
		$formAction = null,
		$formEncType = null,
		$formMethod = null,
		?bool $formNoValidate = null,
		$formTarget = null,
		$height = null,
		$list = null,
		$max = null,
		$maxLength = null,
		$min = null,
		?bool $multiple = null,
		$pattern = null,
		$placeholder = null,
		?bool $readOnly = null,
		?bool $required = null,
		$size = null,
		$src = null,
		$step = null,
		$value = null,
		$width = null,
		?array $data = null,
		$addClass = null,
		$removeClass = null,
		$accessKey = null,
		$class = null,
		?bool $contentEditable = null,
		$contextMenu = null,
		$dir = null,
		$draggable = null,
		$dropZone = null,
		?bool $hide = null,
		$id = null,
		$lang = null,
		$role = null,
		?bool $spellCheck = null,
		$style = null,
		$tabIndex = null,
		$title = null,
		$ariaActiveDescendant = null,
		?bool $ariaAtomic = null,
		?bool $ariaBusy = null,
		$ariaControls = null,
		$ariaDescribedBy = null,
		$ariaDisabled = null,
		$ariaDropEffect = null,
		$ariaFlowTo = null,
		$ariaGrabbed = null,
		?bool $ariaHasPopup = null,
		?bool $ariaHidden = null,
		$ariaInvalid = null,
		$ariaLabel = null,
		$ariaLabelledBy = null,
		$ariaLive = null,
		$ariaOwns = null,
		$ariaRelevant = null,
		?bool $grouped = null,
		?bool $withoutGroup = null,
		$variant = null,
		?string $variants = null,
		$defaultValue = null
	) {
		$this->createElement(CheckboxElement::class, compact(
			'labelHtml',
			'name',
			'defaultChecked',
			'type',
			'accept',
			'alt',
			'autoComplete',
			'autoFocus',
			'checked',
			'dirName',
			'disabled',
			'form',
			'formAction',
			'formEncType',
			'formMethod',
			'formNoValidate',
			'formTarget',
			'height',
			'list',
			'max',
			'maxLength',
			'min',
			'multiple',
			'pattern',
			'placeholder',
			'readOnly',
			'required',
			'size',
			'src',
			'step',
			'value',
			'width',
			'data',
			'addClass',
			'removeClass',
			'accessKey',
			'class',
			'contentEditable',
			'contextMenu',
			'dir',
			'draggable',
			'dropZone',
			'hide',
			'id',
			'lang',
			'role',
			'spellCheck',
			'style',
			'tabIndex',
			'title',
			'ariaActiveDescendant',
			'ariaAtomic',
			'ariaBusy',
			'ariaControls',
			'ariaDescribedBy',
			'ariaDisabled',
			'ariaDropEffect',
			'ariaFlowTo',
			'ariaGrabbed',
			'ariaHasPopup',
			'ariaHidden',
			'ariaInvalid',
			'ariaLabel',
			'ariaLabelledBy',
			'ariaLive',
			'ariaOwns',
			'ariaRelevant',
			'grouped',
			'withoutGroup',
			'variant',
			'variants',
			'defaultValue'
		));
	}
}
